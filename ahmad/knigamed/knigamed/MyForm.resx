<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>